# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mcwa+.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(280, 152)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.decode = QtWidgets.QPushButton(self.centralwidget)
        self.decode.setGeometry(QtCore.QRect(10, 120, 260, 24))
        self.decode.setObjectName("decode")
        self.comboBox = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox.setGeometry(QtCore.QRect(15, 90, 141, 22))
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.x = QtWidgets.QLabel(self.centralwidget)
        self.x.setGeometry(QtCore.QRect(10, 13, 47, 13))
        font = QtGui.QFont()
        font.setPointSize(13)
        self.x.setFont(font)
        self.x.setObjectName("x")
        self.z = QtWidgets.QLabel(self.centralwidget)
        self.z.setGeometry(QtCore.QRect(10, 53, 47, 13))
        font = QtGui.QFont()
        font.setPointSize(13)
        self.z.setFont(font)
        self.z.setObjectName("z")
        self.resx = QtWidgets.QLabel(self.centralwidget)
        self.resx.setGeometry(QtCore.QRect(155, 10, 110, 22))
        self.resx.setText("")
        self.resx.setObjectName("resx")
        self.resz = QtWidgets.QLabel(self.centralwidget)
        self.resz.setGeometry(QtCore.QRect(155, 50, 110, 22))
        self.resz.setText("")
        self.resz.setObjectName("resz")
        self.linex = QtWidgets.QSpinBox(self.centralwidget)
        self.linex.setGeometry(QtCore.QRect(50, 10, 91, 22))
        self.linex.setMinimum(-999999999)
        self.linex.setMaximum(999999999)
        self.linex.setObjectName("linex")
        self.linez = QtWidgets.QSpinBox(self.centralwidget)
        self.linez.setGeometry(QtCore.QRect(50, 50, 91, 22))
        self.linez.setMinimum(-999999999)
        self.linez.setMaximum(999999999)
        self.linez.setObjectName("linez")
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.decode.clicked.connect(self.obmad)
    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MC coordinates decoder"))
        self.decode.setText(_translate("MainWindow", "decode"))
        self.comboBox.setItemText(0, _translate("MainWindow", "nether > world"))
        self.comboBox.setItemText(1, _translate("MainWindow", "world > hether"))
        self.x.setText(_translate("MainWindow", "    x"))
        self.z.setText(_translate("MainWindow", "    z"))

    def obmad(self):

        a = self.comboBox.currentText()
        if a == "nether > world":

            x = int(self.linex.text())
            print(type(x))
            # if type(x) == float or type(x) == :
            print(x)
            xres = x / 8

            # elif type(x)!= float:
            # print("bla")
            z = int(self.linez.text())
            print(type(z))
            print(z)
            zres = z / 8
            self.resx.setText(str(xres))
            self.resz.setText(str(zres))

        elif a == "world > hether":

            x = int(self.linex.text())
            print(type(x))
            # if type(x) == float or type(x) == :
            print(x)
            xres = x * 8

            # elif type(x)!= float:
            # print("bla")
            z = int(self.linez.text())
            print(type(z))
            print(z)
            zres = z * 8
            self.resx.setText(str(xres))
            self.resz.setText(str(zres))

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
